
"SmartSource:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md": {"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md","class_name":"SmartSource","history":[{"blocks":{"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Load an image using PIL":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Transform the image to a tensor and normalize it":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the transformation to the image":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Define a Conv2d layer with 3 input channels (RGB) and 10 output channels":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the Conv2d layer to the input":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Convert the output image to a NumPy array":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Normalize each output channel for better visualization (scale between 0 and 1)":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the original image":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the first 10 output channels in a 2x5 grid":true},"mtime":1726657030985,"size":1661,"hash":"e01f43ca88744b4dd9a8dfc37ae3968d2db005f93b5f4fbf073250d1b068fe78"}],"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[0.00409195,-0.06575943,-0.01453389,-0.0210125,-0.01067488,0.05015192,-0.06733585,-0.00427213,-0.00487678,0.06202621,0.01101176,-0.14550009,0.01993292,0.01347223,-0.00431153,0.02295723,-0.0363389,0.07694102,-0.09693252,-0.00195629,0.08126776,-0.06704808,0.01165032,-0.03524815,0.06679752,0.02945658,0.0003988,-0.01266416,-0.03179548,-0.2280595,0.02856409,-0.01069972,0.00573315,0.00684395,-0.03542803,-0.00994786,-0.07142614,0.03561722,-0.05972384,0.02586958,0.04417187,-0.01830261,-0.06655429,-0.03001334,-0.02009683,-0.07920278,-0.01535635,-0.02632608,0.0618572,-0.04008357,-0.02919131,-0.01766938,-0.01310891,-0.02332185,0.03332653,-0.00255244,0.01072935,0.04242032,0.10671661,0.01506732,-0.02997182,0.05955363,-0.19144768,0.11464307,0.0204429,-0.00858855,-0.02434867,-0.00269701,0.0131627,0.03100428,-0.04319504,0.0146041,-0.0401159,0.01623536,0.0051826,-0.10147403,-0.02827133,-0.03263643,0.00658709,0.00064208,-0.01906762,0.03962464,0.01373704,-0.04661143,0.0580544,0.0015701,0.00160846,-0.02094252,0.04938873,0.01015558,-0.01103716,-0.07862709,-0.09923613,0.04352061,-0.01558232,-0.00411343,0.07607286,0.02267256,0.01844192,0.08089445,-0.05242297,-0.02658199,0.04408139,0.00141627,0.06443665,-0.02218319,-0.03736432,0.04078033,-0.07848953,0.01490822,-0.04027539,0.02743949,0.00511073,-0.02169851,0.01364455,-0.0073669,-0.07059256,0.06030068,-0.04705174,-0.00863851,0.00836058,-0.00799685,-0.01796376,0.03243539,0.041118,0.02281244,0.03527233,0.05665187,0.00817967,0.06410368,0.02992219,0.02015681,-0.0508715,0.03869686,-0.03428155,0.03944939,0.06674341,0.02819398,-0.03496068,-0.0066822,0.00268053,-0.00462158,0.00987672,-0.0068505,0.05825303,0.07285764,-0.10496122,0.02842947,-0.02719441,-0.01286783,-0.01303204,-0.00328636,-0.0720287,-0.02950882,0.06125667,0.05649187,0.01029613,-0.00364408,-0.06189795,-0.00980233,-0.01962515,-0.08529201,-0.00988896,0.04809991,0.02258522,-0.03536387,-0.02395054,-0.03247578,0.02854177,0.00934846,-0.01764361,-0.0167374,0.0093663,-0.03581719,0.03264907,-0.0396869,-0.09250549,-0.01767499,0.07853244,0.03229841,0.03492083,-0.01527801,0.05115943,-0.04373091,0.00372024,-0.04319239,-0.01239225,-0.01163748,-0.01480103,0.01686382,-0.0793134,0.04004896,-0.0802184,-0.07883949,-0.02419697,-0.017637,-0.00568332,0.00179525,-0.01857988,-0.0043458,0.1004349,-0.02442533,-0.04434335,-0.01395683,-0.04262245,0.01337096,-0.00281167,-0.04418476,0.00727347,0.05612169,0.0024596,-0.0766207,0.04717496,0.04036941,-0.08760583,-0.034004,0.04217169,0.06882479,0.02820114,0.04758614,0.04836226,-0.10105377,-0.07605236,-0.17470157,0.03520436,0.08244051,-0.02278557,0.03383544,-0.06504082,-0.02009924,-0.0058768,-0.02170235,0.00093991,0.11241885,0.00619688,0.00896767,-0.01670859,-0.02905741,-0.00053304,0.02861091,0.02905658,-0.01121904,-0.00984939,0.01909042,0.0569629,0.07041728,-0.08121189,0.02218631,-0.03258008,0.15534061,-0.0016686,0.05709452,0.06228298,0.01430008,0.00714324,-0.06606293,-0.06701612,0.02502141,0.00375388,0.04335252,0.08961539,-0.02278104,0.00731082,0.03236118,0.04945331,0.0625508,-0.08060258,-0.00331127,0.02982446,-0.00965072,0.04457445,-0.05847042,0.02381731,-0.01488582,-0.02159387,0.03560726,-0.00881315,0.04670762,-0.05091406,-0.07239716,0.02266196,0.0154534,0.02441098,-0.03318355,-0.05510442,-0.01909166,-0.08217631,0.02455193,0.01289003,-0.00006245,-0.00629553,0.09294739,0.02204476,0.01818001,0.08910803,0.05093793,0.04380272,0.06688789,0.0496881,0.02602851,0.10075168,0.01877324,-0.02148436,0.00326754,0.02084898,0.02032686,0.02778602,0.08035368,-0.04915158,0.0371315,-0.0221556,0.03128118,-0.01400137,-0.05940349,-0.02151258,-0.01423089,0.09658434,-0.01897329,0.02761234,-0.26037306,-0.01291648,0.01112833,0.00442246,0.01259803,0.03642585,0.08642312,0.01307334,-0.04198399,-0.04692603,-0.08920071,-0.03135318,0.10066705,-0.0053419,-0.00570017,0.03282026,0.08085024,-0.05217028,0.06129631,0.02225672,-0.01026433,0.01235017,0.18883611,-0.05953466,-0.0111498,-0.04302626,-0.06478927,0.00373731,0.0503393,0.08436943,-0.00089454,0.01863563,0.08087523,-0.00118857,0.03796885,0.10190232,-0.01163069,-0.02728371,0.01568278,-0.05723298,0.02180343,0.00585499,-0.01998609,-0.02581879,0.07811427,-0.01777589,-0.00322491,0.00567503,-0.02772576,-0.01375648,-0.02714991,0.05031879,-0.00318814,0.0331485,0.03798005,0.02577947,-0.02635542,0.01092041,0.03301838,0.01780759,0.04073547,-0.12128976,0.03854066,-0.01198641,-0.06492736],"tokens":440}},"outlinks":[]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#","heading":null,"length":161,"lines":[0,7]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Load an image using PIL": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Load an image using PIL","heading":"Load an image using PIL","length":87,"lines":[8,11]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Transform the image to a tensor and normalize it": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Transform the image to a tensor and normalize it","heading":"Transform the image to a tensor and normalize it","length":107,"lines":[12,16]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the transformation to the image": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the transformation to the image","heading":"Apply the transformation to the image","length":66,"lines":[17,19]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Define a Conv2d layer with 3 input channels (RGB) and 10 output channels": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Define a Conv2d layer with 3 input channels (RGB) and 10 output channels","heading":"Define a Conv2d layer with 3 input channels (RGB) and 10 output channels","length":90,"lines":[20,22]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the Conv2d layer to the input": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the Conv2d layer to the input","heading":"Apply the Conv2d layer to the input","length":38,"lines":[23,25]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Convert the output image to a NumPy array": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Convert the output image to a NumPy array","heading":"Convert the output image to a NumPy array","length":54,"lines":[26,28]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Normalize each output channel for better visualization (scale between 0 and 1)": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Normalize each output channel for better visualization (scale between 0 and 1)","heading":"Normalize each output channel for better visualization (scale between 0 and 1)","length":190,"lines":[29,35]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the original image": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the original image","heading":"Plot the original image","length":85,"lines":[36,42]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the first 10 output channels in a 2x5 grid": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the first 10 output channels in a 2x5 grid","heading":"Plot the first 10 output channels in a 2x5 grid","length":309,"lines":[43,54]}