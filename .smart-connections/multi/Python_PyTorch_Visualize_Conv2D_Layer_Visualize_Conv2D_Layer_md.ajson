
"SmartSource:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md": {"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md","class_name":"SmartSource","history":[{"blocks":{"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Load an image using PIL":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Transform the image to a tensor and normalize it":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the transformation to the image":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Define a Conv2d layer with 3 input channels (RGB) and 10 output channels":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the Conv2d layer to the input":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Convert the output image to a NumPy array":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Normalize each output channel for better visualization (scale between 0 and 1)":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the original image":true,"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the first 10 output channels in a 2x5 grid":true},"mtime":1726668907135,"size":1661,"hash":"b3381e8877cff106e9729ef6832587662071b9c9e9bf2e5509fc3069e8c6a088"}],"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[0.00409194,-0.06575946,-0.01453391,-0.02101251,-0.01067488,0.05015193,-0.06733585,-0.00427212,-0.00487677,0.06202617,0.01101175,-0.14550011,0.01993293,0.01347225,-0.00431151,0.02295723,-0.0363389,0.07694104,-0.09693254,-0.0019563,0.08126777,-0.06704807,0.01165034,-0.03524815,0.06679752,0.02945659,0.00039879,-0.01266417,-0.03179549,-0.22805955,0.02856409,-0.01069972,0.00573313,0.00684395,-0.03542803,-0.00994785,-0.07142614,0.03561722,-0.05972382,0.02586959,0.04417187,-0.01830259,-0.0665543,-0.03001335,-0.02009681,-0.07920279,-0.01535635,-0.02632607,0.06185721,-0.04008356,-0.02919134,-0.0176694,-0.0131089,-0.02332184,0.03332651,-0.00255244,0.01072936,0.04242033,0.10671663,0.01506734,-0.02997182,0.05955362,-0.19144769,0.1146431,0.02044289,-0.00858856,-0.02434867,-0.00269704,0.01316268,0.0310043,-0.04319503,0.0146041,-0.04011589,0.01623536,0.00518261,-0.10147405,-0.02827135,-0.03263643,0.00658709,0.00064209,-0.01906762,0.03962463,0.01373703,-0.04661143,0.0580544,0.00157009,0.00160846,-0.02094255,0.04938871,0.01015558,-0.01103716,-0.07862709,-0.09923613,0.04352062,-0.01558231,-0.00411339,0.07607286,0.02267256,0.01844189,0.08089446,-0.05242298,-0.02658201,0.04408138,0.00141627,0.06443665,-0.02218319,-0.03736433,0.04078033,-0.07848953,0.01490822,-0.04027544,0.02743952,0.00511073,-0.02169851,0.01364455,-0.00736689,-0.07059257,0.06030067,-0.04705175,-0.00863852,0.00836059,-0.00799686,-0.01796377,0.03243541,0.04111801,0.02281244,0.03527232,0.05665186,0.00817967,0.0641037,0.0299222,0.02015682,-0.05087153,0.03869687,-0.03428153,0.03944941,0.06674341,0.02819398,-0.0349607,-0.00668221,0.00268054,-0.00462159,0.00987672,-0.0068505,0.05825302,0.07285766,-0.10496123,0.02842946,-0.0271944,-0.01286784,-0.01303205,-0.00328635,-0.0720287,-0.0295088,0.0612567,0.05649186,0.01029613,-0.00364407,-0.06189796,-0.00980236,-0.01962515,-0.08529198,-0.00988894,0.04809993,0.02258521,-0.03536387,-0.02395054,-0.03247577,0.0285418,0.00934844,-0.01764365,-0.01673739,0.00936631,-0.03581719,0.03264908,-0.03968688,-0.09250551,-0.01767499,0.07853243,0.03229842,0.03492084,-0.01527801,0.05115943,-0.04373091,0.00372024,-0.04319238,-0.01239224,-0.01163746,-0.01480104,0.01686382,-0.0793134,0.04004899,-0.0802184,-0.07883947,-0.02419696,-0.01763701,-0.00568332,0.00179525,-0.01857989,-0.00434579,0.10043491,-0.02442532,-0.04434334,-0.01395682,-0.04262246,0.01337097,-0.00281164,-0.0441848,0.00727347,0.0561217,0.00245959,-0.07662071,0.04717496,0.04036942,-0.08760583,-0.03400397,0.04217169,0.06882479,0.02820115,0.04758614,0.04836227,-0.10105377,-0.07605235,-0.17470159,0.03520438,0.08244053,-0.02278556,0.03383545,-0.0650408,-0.02009927,-0.00587679,-0.02170235,0.0009399,0.11241881,0.00619688,0.00896767,-0.01670859,-0.0290574,-0.00053306,0.02861092,0.02905659,-0.01121903,-0.0098494,0.01909042,0.0569629,0.07041729,-0.08121189,0.02218633,-0.03258008,0.15534063,-0.00166862,0.0570945,0.06228299,0.01430007,0.00714321,-0.06606293,-0.06701614,0.02502142,0.00375386,0.04335252,0.0896154,-0.02278105,0.00731082,0.03236119,0.04945332,0.06255078,-0.08060261,-0.00331125,0.02982447,-0.00965073,0.04457445,-0.05847044,0.0238173,-0.01488584,-0.02159389,0.03560727,-0.00881314,0.04670762,-0.05091408,-0.07239715,0.02266196,0.01545341,0.02441098,-0.03318355,-0.05510442,-0.01909165,-0.08217633,0.02455194,0.01289004,-0.00006244,-0.00629552,0.09294738,0.02204476,0.01817999,0.08910803,0.05093796,0.04380273,0.06688792,0.04968811,0.02602848,0.10075168,0.01877325,-0.02148436,0.00326753,0.02084899,0.02032688,0.02778601,0.08035369,-0.04915161,0.03713149,-0.02215559,0.03128119,-0.01400138,-0.05940348,-0.02151259,-0.01423089,0.09658435,-0.01897329,0.02761233,-0.26037309,-0.01291649,0.01112834,0.00442245,0.01259802,0.03642587,0.08642314,0.01307334,-0.04198398,-0.04692603,-0.08920072,-0.03135319,0.10066705,-0.00534189,-0.00570016,0.03282025,0.08085024,-0.05217031,0.06129631,0.02225674,-0.01026433,0.01235016,0.18883614,-0.05953464,-0.01114982,-0.04302623,-0.06478927,0.00373732,0.05033931,0.08436944,-0.00089454,0.01863564,0.08087522,-0.00118859,0.03796886,0.10190231,-0.01163071,-0.0272837,0.01568278,-0.05723298,0.02180341,0.00585498,-0.01998612,-0.02581881,0.07811427,-0.0177759,-0.00322491,0.00567502,-0.02772577,-0.01375646,-0.02714993,0.05031883,-0.00318815,0.03314849,0.03798005,0.02577949,-0.02635544,0.0109204,0.03301838,0.01780759,0.04073549,-0.12128976,0.03854067,-0.01198641,-0.06492737],"tokens":440}},"outlinks":[]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#","heading":null,"length":161,"lines":[0,7]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Load an image using PIL": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Load an image using PIL","heading":"Load an image using PIL","length":87,"lines":[8,11]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Transform the image to a tensor and normalize it": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Transform the image to a tensor and normalize it","heading":"Transform the image to a tensor and normalize it","length":107,"lines":[12,16]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the transformation to the image": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the transformation to the image","heading":"Apply the transformation to the image","length":66,"lines":[17,19]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Define a Conv2d layer with 3 input channels (RGB) and 10 output channels": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Define a Conv2d layer with 3 input channels (RGB) and 10 output channels","heading":"Define a Conv2d layer with 3 input channels (RGB) and 10 output channels","length":90,"lines":[20,22]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the Conv2d layer to the input": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Apply the Conv2d layer to the input","heading":"Apply the Conv2d layer to the input","length":38,"lines":[23,25]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Convert the output image to a NumPy array": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Convert the output image to a NumPy array","heading":"Convert the output image to a NumPy array","length":54,"lines":[26,28]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Normalize each output channel for better visualization (scale between 0 and 1)": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Normalize each output channel for better visualization (scale between 0 and 1)","heading":"Normalize each output channel for better visualization (scale between 0 and 1)","length":190,"lines":[29,35]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the original image": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the original image","heading":"Plot the original image","length":85,"lines":[36,42]}
"SmartBlock:Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the first 10 output channels in a 2x5 grid": {"class_name":"SmartBlock","embeddings":{},"path":"Python/PyTorch/Visualize Conv2D Layer/Visualize Conv2D Layer.md#Plot the first 10 output channels in a 2x5 grid","heading":"Plot the first 10 output channels in a 2x5 grid","length":309,"lines":[43,54]}