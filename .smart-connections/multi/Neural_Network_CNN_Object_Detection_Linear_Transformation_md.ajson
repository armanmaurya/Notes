
"SmartSource:Neural Network/CNN/Object Detection/Linear Transformation.md": {"path":"Neural Network/CNN/Object Detection/Linear Transformation.md","class_name":"SmartSource","history":[{"blocks":{"Neural Network/CNN/Object Detection/Linear Transformation.md#Linear Transformation":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 1: Import PyTorch":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 2: Define the Input Data":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 3: Define the Number of Input and Output Features":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 4: Define a Linear Transformation":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 5: Apply the Linear Transformation to the Input Data:":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 1: Importing PyTorch":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#tensor (float32)":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 3: Define the in_features, out_features":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 4: Define a linear transformation":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#the tensor":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 1: Importing PyTorch{1}":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 2: Define input data as torch tensor (float32)":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 3: Define the in_features, out_features{1}":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 4: Define a linear transformation{1}":true,"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 5: Apply the Linear transformation to the tensor":true},"mtime":1716527514000,"size":5629,"hash":"532078c69594b278b9dff9849df470972035917f4a581493c483e64c2842bf2c"}],"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[0.0042826,-0.03677028,-0.01731736,0.00766673,-0.03214948,0.04601556,0.01272333,-0.01941496,0.01320304,0.01089699,0.02787623,-0.08756426,-0.01978401,0.00926995,0.01433297,0.00382954,-0.00344015,0.05472546,-0.10520996,-0.04081193,0.06678201,-0.07027281,-0.00948198,-0.02673593,0.03261699,0.02013545,0.01069813,0.02532697,-0.06519128,-0.24664477,0.05106864,-0.00828898,0.10140081,-0.02857384,-0.01112808,-0.00464377,-0.08155119,0.02179019,-0.08654023,0.05426368,0.03036228,0.00286878,-0.04876177,-0.07402765,0.0334185,-0.06940891,0.02552856,-0.00975948,-0.0462186,-0.0016182,-0.00665044,-0.07008452,0.06853592,0.02226524,0.03680101,0.01921239,0.00818033,0.04825693,0.10088564,0.06254257,-0.00843354,0.04720291,-0.18910472,0.02430932,0.00690768,0.00600923,-0.04294439,-0.11747883,0.01693514,0.02147853,0.01030588,-0.00637684,0.05515261,-0.00892592,-0.03954773,-0.00250155,0.02405744,-0.02777523,0.02166719,0.02906702,0.03468369,0.04435121,0.00496963,-0.00334956,0.00124191,-0.02214009,0.02695173,-0.01921263,0.02910804,0.00582793,-0.04660693,-0.00502451,-0.02315359,0.02126485,-0.03694189,-0.04448019,0.05189891,0.02889541,-0.01026124,0.10031579,-0.05851993,-0.00505419,0.01002389,0.01243635,0.01178347,-0.00175234,0.01887264,-0.00560762,-0.03701401,0.0005544,-0.04835401,-0.05061642,-0.06152914,-0.00600721,-0.01695987,-0.01716509,0.03751601,0.0423387,-0.04048806,0.02374209,0.00346202,-0.00882888,0.01864907,0.0293172,0.03605975,0.02696532,-0.00210756,0.07633241,0.02850929,0.08960038,0.03725594,0.03623149,-0.10917688,0.02773583,0.00286385,0.02555518,0.09069233,0.00307634,-0.04392437,0.03488401,-0.01597196,0.02453526,0.08154377,0.0159717,-0.05211202,0.10866802,-0.05552216,-0.02333713,0.00136664,-0.04096308,-0.01044091,0.06815176,-0.09103145,-0.04073787,0.03439042,0.08155742,-0.02389152,-0.01415726,-0.07037882,0.02315429,-0.04908858,-0.04675298,-0.01448447,0.08152279,0.06397934,-0.04861924,0.02339955,-0.03049016,-0.00378102,-0.01547811,0.08517176,0.00899652,-0.0367368,-0.02770765,0.02225867,0.0166871,-0.08657189,-0.02308399,0.0322801,0.00824115,0.03924645,-0.01978633,0.02829236,-0.02048508,0.02756733,-0.03661781,-0.00243093,-0.04028733,-0.02652456,0.03030543,-0.10945581,0.05337707,-0.03273141,-0.04761136,0.0051785,-0.04204134,-0.0004425,-0.00149381,-0.04200267,-0.00669926,-0.01073233,-0.02236616,-0.02624981,-0.00728855,-0.02967648,0.02742736,-0.00948864,-0.0263772,0.01066421,0.08187693,0.03866866,-0.03202783,0.03055217,-0.03471216,-0.07540257,-0.04936562,-0.0138582,0.02392559,-0.06396952,0.00574896,-0.00548257,-0.08921477,-0.04865096,-0.17964029,-0.00078707,0.10651678,-0.03556127,0.05819236,-0.09151194,0.00915574,0.00398613,0.01967272,0.05352927,0.08169074,0.04867794,0.00278963,-0.03753893,0.02762919,0.01631451,0.01993355,0.00182387,-0.05639884,0.00808738,-0.0287355,0.05517834,0.05069464,-0.08476979,-0.02852758,-0.02274308,0.13434991,-0.03125413,0.08172814,0.05621886,0.00413158,0.01063238,-0.02624881,-0.03394011,0.07672109,-0.01571708,0.05422899,0.07555506,-0.04391218,-0.02237232,-0.00501896,0.06254099,0.05400018,-0.10110312,-0.01020074,0.02882262,-0.03053924,0.03371441,-0.04435421,0.01940393,0.03237997,-0.02559623,0.07894918,0.01317272,0.06649172,-0.07989962,-0.07983512,0.01704624,-0.022916,0.00967715,-0.02498762,-0.06344088,-0.03262885,-0.05342495,0.02752379,-0.01394947,-0.01650044,-0.01403405,0.01932259,0.00682076,-0.01551969,0.10537592,0.09350847,0.05409785,0.0311375,0.03960224,0.03329916,0.03092919,-0.03112444,0.03936819,0.06207186,-0.03182949,0.00420119,0.03107886,0.0553374,0.00913774,0.04556395,-0.01674486,0.03007095,0.03282126,-0.03120817,-0.03866806,-0.04328102,0.0041806,0.03737914,-0.00343054,-0.25657374,0.01750204,0.04400483,0.07788751,0.02124774,-0.05482647,0.08341666,-0.00868122,-0.01971662,-0.02717516,-0.0526452,-0.01553754,0.1120523,-0.03021432,-0.01499184,0.05616297,0.101259,-0.06679948,0.00765492,0.01168267,-0.02022473,0.0594883,0.1887302,-0.06738236,0.03909141,-0.04681586,-0.04567812,-0.03594611,0.05787446,0.04745772,0.03686612,0.01575012,0.10219361,-0.04048274,0.02486623,0.10240709,-0.03558647,-0.05800731,-0.00429892,-0.04762256,0.0255839,-0.00873446,-0.03004291,-0.03808263,0.06328406,-0.00454931,0.03452301,-0.00554459,-0.01228421,-0.01747403,0.01638051,0.04785478,-0.01402559,0.03516018,0.01963892,0.01422475,-0.0400116,-0.00698119,-0.03040897,-0.01148907,0.0657178,-0.1061613,0.01300688,0.00436608,-0.09261494],"tokens":464}},"outlinks":[]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Linear Transformation": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Linear Transformation","heading":"Linear Transformation","length":791,"lines":[0,17]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation","heading":"Stepwise Implementation","length":83,"lines":[18,22]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 1: Import PyTorch": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 1: Import PyTorch","heading":"Step 1: Import PyTorch","length":96,"lines":[23,29]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 2: Define the Input Data": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 2: Define the Input Data","heading":"Step 2: Define the Input Data","length":455,"lines":[30,41]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 3: Define the Number of Input and Output Features": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 3: Define the Number of Input and Output Features","heading":"Step 3: Define the Number of Input and Output Features","length":359,"lines":[42,53]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 4: Define a Linear Transformation": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 4: Define a Linear Transformation","heading":"Step 4: Define a Linear Transformation","length":385,"lines":[54,64]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 5: Apply the Linear Transformation to the Input Data:": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Stepwise Implementation#Step 5: Apply the Linear Transformation to the Input Data:","heading":"Step 5: Apply the Linear Transformation to the Input Data:","length":455,"lines":[65,81]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Step 1: Importing PyTorch": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 1: Importing PyTorch","heading":"Step 1: Importing PyTorch","length":12,"lines":[84,86]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#tensor (float32)": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#tensor (float32)","heading":"tensor (float32)","length":168,"lines":[88,93]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Step 3: Define the in_features, out_features": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 3: Define the in_features, out_features","heading":"Step 3: Define the in_features, out_features","length":32,"lines":[94,97]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Step 4: Define a linear transformation": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 4: Define a linear transformation","heading":"Step 4: Define a linear transformation","length":51,"lines":[98,100]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#the tensor": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#the tensor","heading":"the tensor","length":867,"lines":[102,128]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Step 1: Importing PyTorch{1}": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 1: Importing PyTorch{1}","heading":"Step 1: Importing PyTorch","length":12,"lines":[131,133]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Step 2: Define input data as torch tensor (float32)": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 2: Define input data as torch tensor (float32)","heading":"Step 2: Define input data as torch tensor (float32)","length":150,"lines":[134,139]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Step 3: Define the in_features, out_features{1}": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 3: Define the in_features, out_features{1}","heading":"Step 3: Define the in_features, out_features","length":32,"lines":[140,143]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Step 4: Define a linear transformation{1}": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 4: Define a linear transformation{1}","heading":"Step 4: Define a linear transformation","length":51,"lines":[144,146]}
"SmartBlock:Neural Network/CNN/Object Detection/Linear Transformation.md#Step 5: Apply the Linear transformation to the tensor": {"class_name":"SmartBlock","embeddings":{},"path":"Neural Network/CNN/Object Detection/Linear Transformation.md#Step 5: Apply the Linear transformation to the tensor","heading":"Step 5: Apply the Linear transformation to the tensor","length":678,"lines":[147,171]}